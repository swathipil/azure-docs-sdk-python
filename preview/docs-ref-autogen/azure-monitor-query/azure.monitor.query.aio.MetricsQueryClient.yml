### YamlMime:PythonClass
uid: azure.monitor.query.aio.MetricsQueryClient
name: MetricsQueryClient
fullName: azure.monitor.query.aio.MetricsQueryClient
module: azure.monitor.query.aio
inheritances:
- builtins.object
constructor:
  syntax: 'MetricsQueryClient(credential: AsyncTokenCredential, **kwargs: Any)'
  parameters:
  - name: credential
    description: The credential to authenticate the client
    isRequired: true
    types:
    - <xref:azure.core.credentials_async.AsyncTokenCredential>
  - name: endpoint
    description: The endpoint to connect to. Defaults to '[https://management.azure.com](https://management.azure.com)'.
    types:
    - <xref:Optional>[<xref:str>]
methods:
- uid: azure.monitor.query.aio.MetricsQueryClient.close
  name: close
  summary: Close the <xref:azure.monitor.query.aio.MetricsQueryClient> session.
  signature: async close() -> None
- uid: azure.monitor.query.aio.MetricsQueryClient.list_metric_definitions
  name: list_metric_definitions
  summary: Lists the metric definitions for the resource.
  signature: 'list_metric_definitions(resource_uri: str, **kwargs: Any) -> AsyncItemPaged[MetricDefinition]'
  parameters:
  - name: resource_uri
    description: The identifier of the resource.
    isRequired: true
    types:
    - <xref:str>
  - name: namespace
    description: Metric namespace to query metric definitions for.
    types:
    - <xref:Optional>[<xref:str>]
  return:
    description: An iterator like instance of either MetricDefinition or the result
      of cls(response)
    types:
    - '<xref:azure.core.paging.AsyncItemPaged>[<xref::class: *azure.monitor.query.MetricDefinition*>]'
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.monitor.query.aio.MetricsQueryClient.list_metric_namespaces
  name: list_metric_namespaces
  summary: Lists the metric namespaces for the resource.
  signature: 'list_metric_namespaces(resource_uri: str, **kwargs: Any) -> AsyncItemPaged[MetricNamespace]'
  parameters:
  - name: resource_uri
    description: The identifier of the resource.
    isRequired: true
    types:
    - <xref:str>
  - name: start_time
    description: 'The start time from which to query for metric

      namespaces. This should be provided as a datetime object.'
    types:
    - <xref:Optional>[<xref:datetime.datetime>]
  return:
    description: An iterator like instance of either MetricNamespace or the result
      of cls(response)
    types:
    - '<xref:azure.core.paging.AsyncItemPaged>[<xref::class: *azure.monitor.query.MetricNamespace*>]'
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.monitor.query.aio.MetricsQueryClient.query_resource
  name: query_resource
  summary: 'Lists the metric values for a resource.


    **Note**: Although the start_time, end_time, duration are optional parameters,
    it is highly

    recommended to specify the timespan. If not, the entire dataset is queried.'
  signature: 'async query_resource(resource_uri: str, metric_names: List[str], **kwargs:
    Any) -> MetricsQueryResult'
  parameters:
  - name: resource_uri
    description: The identifier of the resource.
    isRequired: true
    types:
    - <xref:str>
  - name: metric_names
    description: The names of the metrics to retrieve.
    isRequired: true
    types:
    - <xref:list>
  - name: timespan
    description: 'The timespan for which to query the data. This can be a timedelta,

      a timedelta and a start datetime, or a start datetime/end datetime.'
    types:
    - <xref:Optional>[<xref:Union>[<xref:datetime.timedelta>, <xref:tuple>[<xref:datetime.datetime>,
      <xref:datetime.timedelta>]<xref:,tuple>[<xref:datetime.datetime>, <xref:datetime.datetime>]]]
  - name: granularity
    description: The interval (i.e. timegrain) of the query.
    types:
    - <xref:Optional>[<xref:datetime.timedelta>]
  - name: aggregations
    description: 'The list of aggregation types to retrieve.

      Use *azure.monitor.query.MetricAggregationType* enum to get each aggregation
      type.'
    types:
    - <xref:Optional>[<xref:list>[<xref:str>]]
  - name: max_results
    description: 'The maximum number of records to retrieve.

      Valid only if $filter is specified.

      Defaults to 10.'
    types:
    - <xref:Optional>[<xref:int>]
  - name: order_by
    description: 'The aggregation to use for sorting results and the direction of
      the sort.

      Only one order can be specified.

      Examples: sum asc.'
    types:
    - <xref:Optional>[<xref:str>]
  - name: filter
    description: 'The **$filter** is used to reduce the set of metric data returned.
      Example:

      Metric contains metadata A, B and C. - Return all time series of C where A =
      a1 and B = b1 or

      b2 **$filter=A eq ''a1'' and B eq ''b1'' or B eq ''b2'' and C eq ''*''** - Invalid
      variant: **$filter=A

      eq ''a1'' and B eq ''b1'' and C eq ''*'' or B = ''b2''** This is invalid because
      the logical or

      operator cannot separate two different metadata names. - Return all time series
      where A = a1, B

      = b1 and C = c1: **$filter=A eq ''a1'' and B eq ''b1'' and C eq ''c1''** - Return
      all time series

      where A = a1 **$filter=A eq ''a1'' and B eq ''*'' and C eq ''*''**. Special
      case: When dimension

      name or dimension value uses round brackets. Eg: When dimension name is **dim
      (test) 1**

      Instead of using **$filter= "dim (test) 1 eq ''*''"** use **$filter= "dim %2528test%2529
      1 eq ''*''"**.

      When dimension name is **dim (test) 3** and dimension value is **dim3 (test)
      val**, instead of using

      **$filter= "dim (test) 3 eq ''dim3 (test) val''"** use **$filter= "dim

      %2528test%2529 3 eq ''dim3 %2528test%2529 val''"**. Default value is None.'
    types:
    - <xref:Optional>[<xref:str>]
  - name: metric_namespace
    description: Metric namespace to query metric definitions for.
    types:
    - <xref:Optional>[<xref:str>]
  return:
    description: A MetricsQueryResult object.
    types:
    - <xref:azure.monitor.query.MetricsQueryResult>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
