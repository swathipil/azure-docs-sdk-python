### YamlMime:PythonClass
uid: azure.communication.chat.CommunicationTokenCredential
name: CommunicationTokenCredential
fullName: azure.communication.chat.CommunicationTokenCredential
module: azure.communication.chat
inheritances:
- builtins.object
summary: "Credential type used for authenticating to an Azure Communication service.\n\
  :param str token: The token used to authenticate to an Azure Communication service.\n\
  :keyword token_refresher: The sync token refresher to provide capacity to fetch\
  \ a fresh token.\n\n   The returned token must be valid (expiration date must be\
  \ in the future)."
constructor:
  syntax: 'CommunicationTokenCredential(token: str, **kwargs: Any)'
  parameters:
  - name: proactive_refresh
    description: 'Whether to refresh the token proactively or not.

      If the proactive refreshing is enabled (''proactive_refresh'' is true), the
      credential will use

      a background thread to attempt to refresh the token within 10 minutes before
      the cached token expires,

      the proactive refresh will request a new token by calling the ''token_refresher''
      callback.

      When ''proactive_refresh'' is enabled, the Credential object must be either
      run within a context manager

      or the ''close'' method must be called once the object usage has been finished.'
    types:
    - <xref:bool>
  - name: token
methods:
- uid: azure.communication.chat.CommunicationTokenCredential.close
  name: close
  signature: close() -> None
- uid: azure.communication.chat.CommunicationTokenCredential.get_token
  name: get_token
  summary: 'The value of the configured token.

    :rtype: ~azure.core.credentials.AccessToken'
  signature: get_token(*scopes, **kwargs)
