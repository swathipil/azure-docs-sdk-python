### YamlMime:PythonClass
uid: azure.communication.callautomation.aio.CallConnectionClient
name: CallConnectionClient
fullName: azure.communication.callautomation.aio.CallConnectionClient
module: azure.communication.callautomation.aio
inheritances:
- builtins.object
summary: 'A client to interact with ongoing call. This client can be used to do mid-call
  actions,

  such as Transfer and Play Media. Call must be estbalished to perform these actions.'
constructor:
  syntax: 'CallConnectionClient(endpoint: str, credential: AsyncTokenCredential |
    AzureKeyCredential, call_connection_id: str, *, api_version: str | None = None,
    **kwargs)'
  parameters:
  - name: endpoint
    description: The endpoint of the Azure Communication resource.
    isRequired: true
    types:
    - <xref:str>
  - name: credential
    description: The access key we use to authenticate against the service.
    isRequired: true
    types:
    - <xref:azure.core.credentials_async.AsyncTokenCredential>
    - <xref:azure.core.credentials.AzureKeyCredential>
  - name: call_connection_id
    description: Call Connection ID of ongoing call.
    isRequired: true
    types:
    - <xref:str>
  - name: api_version
    description: Azure Communication Call Automation API version.
    types:
    - <xref:str>
methods:
- uid: azure.communication.callautomation.aio.CallConnectionClient.add_participant
  name: add_participant
  summary: Add a participant to the call.
  signature: 'async add_participant(target_participant: CallInvite, *, invitation_timeout:
    int | None = None, operation_context: str | None = None, **kwargs) -> AddParticipantResult'
  parameters:
  - name: target_participant
    description: The participant being added.
    isRequired: true
    types:
    - <xref:azure.communication.callautomation.CallInvite>
  - name: invitation_timeout
    description: 'Timeout to wait for the invited participant to pickup.

      The maximum value of this is 180 seconds.'
    types:
    - <xref:int>
  - name: operation_context
    description: Value that can be used to track the call and its associated events.
    types:
    - <xref:str>
  return:
    description: AddParticipantResult
    types:
    - <xref:azure.communication.callautomation.AddParticipantResult>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.communication.callautomation.aio.CallConnectionClient.cancel_all_media_operations
  name: cancel_all_media_operations
  summary: Cancels all the queued media operations.
  signature: async cancel_all_media_operations(**kwargs) -> None
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.communication.callautomation.aio.CallConnectionClient.close
  name: close
  signature: async close() -> None
- uid: azure.communication.callautomation.aio.CallConnectionClient.from_connection_string
  name: from_connection_string
  summary: Create CallConnectionClient from a Connection String.
  signature: 'from_connection_string(conn_str: str, call_connection_id: str, **kwargs)
    -> CallConnectionClient'
  parameters:
  - name: conn_str
    description: A connection string to an Azure Communication Service resource.
    isRequired: true
    types:
    - <xref:str>
  - name: call_connection_id
    description: Call Connection Id of ongoing call.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: CallConnectionClient
    types:
    - <xref:azure.communication.callautomation.CallConnectionClient>
- uid: azure.communication.callautomation.aio.CallConnectionClient.get_call_properties
  name: get_call_properties
  summary: Get the latest properties of the call.
  signature: async get_call_properties(**kwargs) -> CallConnectionProperties
  return:
    description: CallConnectionProperties
    types:
    - <xref:azure.communication.callautomation.CallConnectionProperties>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.communication.callautomation.aio.CallConnectionClient.get_participant
  name: get_participant
  summary: Get details of a participant in a call.
  signature: 'async get_participant(target_participant: CommunicationIdentifier, **kwargs)
    -> CallParticipant'
  parameters:
  - name: target_participant
    description: The participant to retrieve.
    isRequired: true
    types:
    - <xref:azure.communication.callautomation.CommunicationIdentifier>
  return:
    description: CallParticipant
    types:
    - <xref:azure.communication.callautomation.CallParticipant>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.communication.callautomation.aio.CallConnectionClient.hang_up
  name: hang_up
  summary: Hangup the call.
  signature: 'async hang_up(is_for_everyone: bool, **kwargs) -> None'
  parameters:
  - name: is_for_everyone
    description: Determine if the call should be ended for all participants.
    isRequired: true
    types:
    - <xref:bool>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.communication.callautomation.aio.CallConnectionClient.list_participants
  name: list_participants
  summary: List all participants from a call.
  signature: list_participants(**kwargs) -> AsyncItemPaged[CallParticipant]
  return:
    description: List of CallParticipant
    types:
    - <xref:ItemPaged>[<xref:azure.communication.callautomation.CallParticipant>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.communication.callautomation.aio.CallConnectionClient.mute_participants
  name: mute_participants
  summary: Mute participants from the call using identifier.
  signature: 'async mute_participants(target_participant: CommunicationIdentifier,
    *, operation_context: str | None = None, **kwargs) -> MuteParticipantsResult'
  parameters:
  - name: target_participant
    description: Participant to be muted from the call. Only ACS Users are supported.
      Required.
    isRequired: true
    types:
    - <xref:azure.communication.callautomation.CommunicationIdentifier>
  - name: operation_context
    description: 'Used by customers when calling mid-call actions to correlate the
      request to the

      response event.'
    types:
    - <xref:str>
  return:
    description: MuteParticipantsResult
    types:
    - <xref:azure.communication.callautomation.MuteParticipantsResult>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.communication.callautomation.aio.CallConnectionClient.play_media
  name: play_media
  summary: 'Play media to specific participant(s) in the call.


    ~azure.communication.callautomation.TextSource or ~azure.communication.callautomation.SsmlSource

    :param play_to: The targets to play media to.

    :type play_to: list[~azure.communication.callautomation.CommunicationIdentifier]

    :keyword loop: if the media should be repeated until cancelled.

    :paramtype loop: bool

    :keyword operation_context: Value that can be used to track this call and its
    associated events.

    :paramtype operation_context: str

    :return: None

    :rtype: None

    :raises ~azure.core.exceptions.HttpResponseError:'
  signature: 'async play_media(play_source: FileSource | TextSource | SsmlSource,
    play_to: List[CommunicationIdentifier], *, loop: bool | None = False, operation_context:
    str | None = None, **kwargs) -> None'
  parameters:
  - name: play_source
    description: A PlaySource representing the source to play.
    isRequired: true
    types:
    - <xref:<xref:azure.communication.callautomation.FileSource or>>
- uid: azure.communication.callautomation.aio.CallConnectionClient.play_media_to_all
  name: play_media_to_all
  summary: 'Play media to all participants in the call.


    ~azure.communication.callautomation.TextSource or ~azure.communication.callautomation.SsmlSource

    :keyword loop: if the media should be repeated until cancelled.

    :paramtype loop: bool

    :keyword operation_context: Value that can be used to track this call and its
    associated events.

    :paramtype operation_context: str

    :return: None

    :rtype: None

    :raises ~azure.core.exceptions.HttpResponseError:'
  signature: 'async play_media_to_all(play_source: FileSource | TextSource | SsmlSource,
    *, loop: bool | None = False, operation_context: str | None = None, **kwargs)
    -> None'
  parameters:
  - name: play_source
    description: A PlaySource representing the source to play.
    isRequired: true
    types:
    - <xref:<xref:azure.communication.callautomation.FileSource or>>
- uid: azure.communication.callautomation.aio.CallConnectionClient.remove_participant
  name: remove_participant
  summary: Remove a participant from the call.
  signature: 'async remove_participant(target_participant: CommunicationIdentifier,
    *, operation_context: str | None = None, **kwargs) -> RemoveParticipantResult'
  parameters:
  - name: target_participant
    description: The participant being removed.
    isRequired: true
    types:
    - <xref:azure.communication.callautomation.CommunicationIdentifier>
  - name: operation_context
    description: Value that can be used to track the call and its associated events.
    types:
    - <xref:str>
  return:
    description: RemoveParticipantResult
    types:
    - <xref:azure.communication.callautomation.RemoveParticipantResult>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.communication.callautomation.aio.CallConnectionClient.send_dtmf
  name: send_dtmf
  summary: 'Send Dtmf tones to the call.


    :type tones:list[str or ~azure.communication.callautomation.DtmfTone]

    :param target_participant: Target participant.

    :type target_participant: ~azure.communication.callautomation.CommunicationIdentifier

    :keyword operation_context: Value that can be used to track the call and its associated
    events.

    :paramtype operation_context: str

    :return: None

    :rtype: None

    :raises ~azure.core.exceptions.HttpResponseError:'
  signature: 'async send_dtmf(tones: List[str | DtmfTone], target_participant: CommunicationIdentifier,
    *, operation_context: str | None = None, **kwargs) -> None'
  parameters:
  - name: tones
    description: List of tones to be sent to target participant.
    isRequired: true
- uid: azure.communication.callautomation.aio.CallConnectionClient.start_continuous_dtmf_recognition
  name: start_continuous_dtmf_recognition
  summary: Start continuous Dtmf recognition by subscribing to tones.
  signature: 'async start_continuous_dtmf_recognition(target_participant: CommunicationIdentifier,
    *, operation_context: str | None = None, **kwargs) -> None'
  parameters:
  - name: target_participant
    description: Target participant.
    isRequired: true
    types:
    - <xref:azure.communication.callautomation.CommunicationIdentifier>
  - name: operation_context
    description: Value that can be used to track the call and its associated events.
    types:
    - <xref:str>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.communication.callautomation.aio.CallConnectionClient.start_recognizing_media
  name: start_recognizing_media
  summary: "Recognize tones from specific participant in the call.\n\n~azure.communication.callautomation.TextSource\
    \ or ~azure.communication.callautomation.SsmlSource\n:keyword interrupt_call_media_operation:\n\
    \n   If set recognize can barge into other existing queued-up/currently-processing\
    \ requests."
  signature: 'async start_recognizing_media(input_type: str | RecognizeInputType,
    target_participant: CommunicationIdentifier, *, initial_silence_timeout: int |
    None = None, play_prompt: FileSource | TextSource | SsmlSource | None = None,
    interrupt_call_media_operation: bool | None = False, operation_context: str |
    None = None, interrupt_prompt: bool | None = False, dtmf_inter_tone_timeout: int
    | None = None, dtmf_max_tones_to_collect: str | None = None, dtmf_stop_tones:
    List[str] | None = None, choices: List[Choice] | None = None, end_silence_timeout_in_ms:
    int | None = None, **kwargs) -> None'
  parameters:
  - name: operation_context
    description: Value that can be used to track the call and its associated events.
    types:
    - <xref:str>
  - name: interrupt_prompt
    description: Determines if we interrupt the prompt and start recognizing.
    types:
    - <xref:bool>
  - name: dtmf_inter_tone_timeout
    description: Time to wait between DTMF inputs to stop recognizing.
    types:
    - <xref:int>
  - name: dtmf_max_tones_to_collect
    description: Maximum number of DTMF tones to be collected.
    types:
    - <xref:int>
  - name: dtmf_stop_tones
    description: List of tones that will stop recognizing.
    types:
    - <xref:list>[<xref:str>
    - <xref:azure.communication.callautomation.DtmfTone>]
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.communication.callautomation.aio.CallConnectionClient.stop_continuous_dtmf_recognition
  name: stop_continuous_dtmf_recognition
  summary: Stop continuous Dtmf recognition by unsubscribing to tones.
  signature: 'async stop_continuous_dtmf_recognition(target_participant: CommunicationIdentifier,
    *, operation_context: str | None = None, **kwargs) -> None'
  parameters:
  - name: target_participant
    description: Target participant.
    isRequired: true
    types:
    - <xref:azure.communication.callautomation.CommunicationIdentifier>
  - name: operation_context
    description: Value that can be used to track the call and its associated events.
    types:
    - <xref:str>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.communication.callautomation.aio.CallConnectionClient.transfer_call_to_participant
  name: transfer_call_to_participant
  summary: Transfer the call to a participant.
  signature: 'async transfer_call_to_participant(target_participant: CommunicationIdentifier,
    *, sip_headers: Dict[str, str] | None = None, voip_headers: Dict[str, str] | None
    = None, operation_context: str | None = None, **kwargs) -> TransferCallResult'
  parameters:
  - name: target_participant
    description: The transfer target.
    isRequired: true
    types:
    - <xref:azure.communication.callautomation.CommunicationIdentifier>
  - name: sip_headers
    description: Custom context for PSTN
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: voip_headers
    description: Custom context for VOIP
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: operation_context
    description: Value that can be used to track the call and its associated events.
    types:
    - <xref:str>
  return:
    description: TransferCallResult
    types:
    - <xref:azure.communication.callautomation.TransferCallResult>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
