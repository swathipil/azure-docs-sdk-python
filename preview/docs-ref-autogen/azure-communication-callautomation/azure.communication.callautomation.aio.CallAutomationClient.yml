### YamlMime:PythonClass
uid: azure.communication.callautomation.aio.CallAutomationClient
name: CallAutomationClient
fullName: azure.communication.callautomation.aio.CallAutomationClient
module: azure.communication.callautomation.aio
inheritances:
- builtins.object
summary: 'A client to interact with the AzureCommunicationService CallAutomation service.

  Call Automation provides developers the ability to build server-based,

  intelligent call workflows, and call recording for voice and PSTN channels.'
constructor:
  syntax: 'CallAutomationClient(endpoint: str, credential: AsyncTokenCredential |
    AzureKeyCredential, *, api_version: str | None = None, source_identity: CommunicationUserIdentifier
    | None = None, **kwargs)'
  parameters:
  - name: endpoint
    description: The endpoint of the Azure Communication resource.
    isRequired: true
    types:
    - <xref:str>
  - name: credential
    description: The access key we use to authenticate against the service.
    isRequired: true
    types:
    - <xref:azure.core.credentials_async.AsyncTokenCredential>
    - <xref:azure.core.credentials.AzureKeyCredential>
  - name: api_version
    description: Azure Communication Call Automation API version.
    types:
    - <xref:str>
  - name: source_identity
    description: 'ACS User Identity to be used when the call is created or answered.

      If not provided, service will generate one.'
    types:
    - <xref:azure.communication.callautomation.CommunicationUserIdentifier>
methods:
- uid: azure.communication.callautomation.aio.CallAutomationClient.answer_call
  name: answer_call
  summary: Answer incoming call with Azure Communication Service's IncomingCall event
  signature: 'async answer_call(incoming_call_context: str, callback_url: str, *,
    media_streaming_configuration: MediaStreamingConfiguration | None = None, azure_cognitive_services_endpoint_url:
    str | None = None, operation_context: str | None = None, **kwargs) -> CallConnectionProperties'
  parameters:
  - name: incoming_call_context
    description: 'This can be read from body of IncomingCall event.

      Use this value to answer incoming call.'
    isRequired: true
    types:
    - <xref:str>
  - name: callback_url
    description: The call back url for receiving events.
    isRequired: true
    types:
    - <xref:str>
  - name: media_streaming_configuration
    description: Media Streaming Configuration.
    types:
    - <xref:azure.communication.callautomation.MediaStreamingConfiguration>
  - name: azure_cognitive_services_endpoint_url
    description: 'The endpoint url of the Azure Cognitive Services resource attached.

      :paramtype azure_cognitive_services_endpoint_url: str'
  - name: operation_context
    description: The operation context.
    types:
    - <xref:str>
  return:
    description: CallConnectionProperties
    types:
    - <xref:azure.communication.callautomation.CallConnectionProperties>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.communication.callautomation.aio.CallAutomationClient.close
  name: close
  signature: async close() -> None
- uid: azure.communication.callautomation.aio.CallAutomationClient.create_call
  name: create_call
  summary: Create a call connection request to a target identity.
  signature: 'async create_call(target_participant: CallInvite, callback_url: str,
    *, operation_context: str | None = None, media_streaming_configuration: MediaStreamingConfiguration
    | None = None, azure_cognitive_services_endpoint_url: str | None = None, **kwargs)
    -> CallConnectionProperties'
  parameters:
  - name: target_participant
    description: Call invitee's information.
    isRequired: true
    types:
    - <xref:azure.communication.callautomation.CallInvite>
  - name: callback_url
    description: The call back url where callback events are sent.
    isRequired: true
    types:
    - <xref:str>
  - name: operation_context
    description: Value that can be used to track the call and its associated events.
    types:
    - <xref:str>
  - name: media_streaming_configuration
    description: Media Streaming Configuration.
    types:
    - <xref:azure.communication.callautomation.MediaStreamingConfiguration>
  - name: azure_cognitive_services_endpoint_url
    description: The identifier of the Cognitive Service resource assigned to this
      call.
    types:
    - <xref:str>
  return:
    description: CallConnectionProperties
    types:
    - <xref:azure.communication.callautomation.CallConnectionProperties>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.communication.callautomation.aio.CallAutomationClient.create_group_call
  name: create_group_call
  summary: Create a call connection request to a list of multiple target identities.
  signature: 'async create_group_call(target_participants: List[CommunicationIdentifier],
    callback_url: str, *, source_caller_id_number: PhoneNumberIdentifier | None =
    None, source_display_name: str | None = None, operation_context: str | None =
    None, media_streaming_configuration: MediaStreamingConfiguration | None = None,
    azure_cognitive_services_endpoint_url: str | None = None, sip_headers: Dict[str,
    str] | None = None, voip_headers: Dict[str, str] | None = None, **kwargs) -> CallConnectionProperties'
  parameters:
  - name: target_participants
    description: A list of targets.
    isRequired: true
    types:
    - <xref:list>[<xref:azure.communication.callautomation.CommunicationIdentifier>]
  - name: callback_url
    description: The call back url for receiving events.
    isRequired: true
    types:
    - <xref:str>
  - name: source_caller_id_number
    description: 'The source caller Id, a phone number,

      that''s shown to the PSTN participant being invited.

      Required only when calling a PSTN callee.'
    types:
    - <xref:azure.communication.callautomation.PhoneNumberIdentifier>
  - name: source_display_name
    description: Display name of the caller.
    types:
    - <xref:str>
  - name: operation_context
    description: Value that can be used to track the call and its associated events.
    types:
    - <xref:str>
  - name: media_streaming_configuration
    description: Media Streaming Configuration.
    types:
    - <xref:azure.communication.callautomation.MediaStreamingConfiguration>
  - name: azure_cognitive_services_endpoint_url
    description: The identifier of the Cognitive Service resource assigned to this
      call.
    types:
    - <xref:str>
  - name: sip_headers
    description: Sip Headers for PSTN Call
    types:
    - <xref:Dict>[<xref:str>, <xref:str>]
  - name: voip_headers
    description: Voip Headers for Voip Call
    types:
    - <xref:Dict>[<xref:str>, <xref:str>]
  return:
    description: CallConnectionProperties
    types:
    - <xref:azure.communication.callautomation.CallConnectionProperties>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.communication.callautomation.aio.CallAutomationClient.delete_recording
  name: delete_recording
  summary: Delete a call recording from given recording url.
  signature: 'async delete_recording(recording_url: str, **kwargs) -> None'
  parameters:
  - name: recording_url
    description: Recording's url.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.communication.callautomation.aio.CallAutomationClient.download_recording
  name: download_recording
  summary: Download a stream of the call recording.
  signature: 'async download_recording(recording_url: str, *, offset: int = None,
    length: int = None, **kwargs) -> AsyncIterable[bytes]'
  parameters:
  - name: recording_url
    description: Recording's url to be downloaded
    isRequired: true
    types:
    - <xref:str>
  - name: offset
    description: 'If provided, only download the bytes of the content in the specified
      range.

      Offset of starting byte.'
    isRequired: true
    types:
    - <xref:int>
  - name: length
    description: 'If provided, only download the bytes of the content in the specified
      range.

      Length of the bytes to be downloaded.'
    isRequired: true
    types:
    - <xref:int>
  return:
    description: AsyncIterable[bytes]
    types:
    - <xref:AsyncIterable>[<xref:bytes>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.communication.callautomation.aio.CallAutomationClient.from_connection_string
  name: from_connection_string
  summary: Create CallAutomation client from a Connection String.
  signature: 'from_connection_string(conn_str: str, **kwargs) -> CallAutomationClient'
  parameters:
  - name: conn_str
    description: A connection string to an Azure Communication Service resource.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: CallAutomationClient
    types:
    - <xref:azure.communication.callautomation.CallAutomationClient>
- uid: azure.communication.callautomation.aio.CallAutomationClient.get_call_connection
  name: get_call_connection
  summary: 'Get CallConnectionClient object.

    Interact with ongoing call with CallConnectionClient.'
  signature: 'get_call_connection(call_connection_id: str, **kwargs) -> CallConnectionClient'
  parameters:
  - name: call_connection_id
    description: CallConnectionId of ongoing call.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: CallConnectionClient
    types:
    - <xref:azure.communication.callautomation.CallConnectionClient>
- uid: azure.communication.callautomation.aio.CallAutomationClient.get_recording_properties
  name: get_recording_properties
  summary: Get call recording properties.
  signature: 'async get_recording_properties(recording_id: str, **kwargs) -> RecordingProperties'
  parameters:
  - name: recording_id
    description: The recording id.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: RecordingProperties
    types:
    - <xref:azure.communication.callautomation.RecordingProperties>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.communication.callautomation.aio.CallAutomationClient.pause_recording
  name: pause_recording
  summary: Pause recording the call.
  signature: 'async pause_recording(recording_id: str, **kwargs) -> None'
  parameters:
  - name: recording_id
    description: The recording id.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.communication.callautomation.aio.CallAutomationClient.redirect_call
  name: redirect_call
  summary: Redirect incoming call to a specific target.
  signature: 'async redirect_call(incoming_call_context: str, target_participant:
    CallInvite, **kwargs) -> None'
  parameters:
  - name: incoming_call_context
    description: 'This can be read from body of IncomingCall event.

      Use this value to redirect incoming call.'
    isRequired: true
    types:
    - <xref:str>
  - name: target_participant
    description: The target identity to redirect the call to.
    isRequired: true
    types:
    - <xref:azure.communication.callautomation.CallInvite>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.communication.callautomation.aio.CallAutomationClient.reject_call
  name: reject_call
  summary: Reject incoming call.
  signature: 'async reject_call(incoming_call_context: str, *, call_reject_reason:
    str | CallRejectReason | None = None, **kwargs) -> None'
  parameters:
  - name: incoming_call_context
    description: 'This can be read from body of IncomingCall event.

      Use this value to reject incoming call.'
    isRequired: true
    types:
    - <xref:str>
  - name: call_reject_reason
    description: The rejection reason.
    types:
    - <xref:str>
    - <xref:azure.communication.callautomation.CallRejectReason>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.communication.callautomation.aio.CallAutomationClient.resume_recording
  name: resume_recording
  summary: Resume recording the call.
  signature: 'async resume_recording(recording_id: str, **kwargs) -> None'
  parameters:
  - name: recording_id
    description: The recording id.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.communication.callautomation.aio.CallAutomationClient.start_recording
  name: start_recording
  summary: Start recording for a ongoing call. Locate the call with call locator.
  signature: 'async start_recording(call_locator: ServerCallLocator | GroupCallLocator,
    *, recording_state_callback_url: str | None = None, recording_content_type: str
    | RecordingContent | None = None, recording_channel_type: str | RecordingChannel
    | None = None, recording_format_type: str | RecordingFormat | None = None, audio_channel_participant_ordering:
    List[CommunicationIdentifier] | None = None, recording_storage_type: str | RecordingStorage
    | None = None, channel_affinity: List[ChannelAffinity] | None = None, external_storage_location:
    str | None = None, **kwargs) -> RecordingProperties'
  parameters:
  - name: call_locator
    description: The call locator to locate ongoing call.
    isRequired: true
    types:
    - <xref:azure.communication.callautomation.ServerCallLocator>
    - <xref:azure.communication.callautomation.GroupCallLocator>
  - name: recording_state_callback_url
    description: The url to send notifications to.
    types:
    - <xref:str>
  - name: recording_content_type
    description: The content type of call recording.
    types:
    - <xref:str>
    - <xref:azure.communication.callautomation.RecordingContent>
  - name: recording_channel_type
    description: The channel type of call recording.
    types:
    - <xref:str>
    - <xref:azure.communication.callautomation.RecordingChannel>
  - name: recording_format_type
    description: The format type of call recording.
    types:
    - <xref:str>
    - <xref:azure.communication.callautomation.RecordingFormat>
  - name: audio_channel_participant_ordering
    description: 'The sequential order in which audio channels are assigned to participants
      in the unmixed recording.

      When ''recordingChannelType'' is set to ''unmixed'' and >>`<<audioChannelParticipantOrdering
      is not specified,

      the audio channel to participant mapping will be automatically assigned based
      on the order in

      which participant first audio was detected.

      Channel to participant mapping details can be found in the metadata of the recording.'
    types:
    - <xref:list>[<xref:azure.communication.callautomation.CommunicationIdentifier>]
  - name: recording_storage_type
    description: 'Recording storage mode.

      `External` enables bring your own storage.'
    types:
    - <xref:str>
  - name: channel_affinity
    description: 'The channel affinity of call recording

      When ''recordingChannelType'' is set to ''unmixed'', if channelAffinity is not
      specified,

      ''channel'' will be automatically assigned.

      Channel-Participant mapping details can be found in the metadata of the recording.'
    types:
    - <xref:list>[<xref:azure.communication.callautomation.ChannelAffinity>]
  - name: external_storage_location
    description: 'The location where recording is stored,

      when RecordingStorageType is set to ''BlobStorage''.'
    types:
    - <xref:str>
    - <xref:azure.communication.callautomation.RecordingStorage>
  return:
    description: RecordingProperties
    types:
    - <xref:azure.communication.callautomation.RecordingProperties>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.communication.callautomation.aio.CallAutomationClient.stop_recording
  name: stop_recording
  summary: Stop recording the call.
  signature: 'async stop_recording(recording_id: str, **kwargs) -> None'
  parameters:
  - name: recording_id
    description: The recording id.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
